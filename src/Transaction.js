import React from 'react';
import { Alchemy, Network } from 'alchemy-sdk';
import { useEffect, useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import Identicon from 'react-identicons';
import Table from 'react-bootstrap/Table';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';

const settings = {
  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,
  network: Network.ETH_MAINNET,
};

const alchemy = new Alchemy(settings);
var transaction = {};
var transactionMoreInfo = {};
var loading = true;

function Transaction() {
  const { transactionHash } = useParams();
  const [amount, setAmount] = useState();

  async function getTransaction() {
    loading = true;

    //console.log("transactionHash",transactionHash);
    transaction = await alchemy.core.getTransactionReceipt(transactionHash);

    loading = false;

    transactionMoreInfo = await alchemy.core.getTransaction(transactionHash);
    setAmount(transactionMoreInfo.value.toString());
  }

  useEffect(() => {
    getTransaction();
  });
  
  if (loading) {
    return <h1>Loading...</h1>
  }

  if (transaction.from === undefined) {
    return <h1>Invalid transaction id!</h1>
  }

  return (
    <>
    <Row>
      <Col>
        <div class='title'>
          <span>Ethereum</span>
          <h1>Transaction #{transactionHash}</h1>
        </div>
      </Col>
    </Row>
    <Row>
      <Col xs={9}>
        <table id="transactionParts">
          <thead>
            <tr>
              <th>Field</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>From</td>
              <td><Link to={`/account/${transaction.from}?highlightTransaction=${transactionHash}`}>{transaction.from}</Link></td>
            </tr>
            <tr>
              <td>To</td>
              <td><Link to={`/account/${transaction.to}?highlightTransaction=${transactionHash}`}>{transaction.to}</Link></td>
            </tr>
            <tr>
              <td>Value</td>
              <td>{amount}</td>
            </tr>
            <tr>
              <td>Block</td>
              <td><Link to={`/block/${transaction.blockHash}?highlightTransaction=${transactionHash}`}>{transaction.blockHash}</Link></td>
            </tr>
            <tr>
              <td>Confirmations</td>
              <td>{transaction.confirmations}</td>
            </tr>
            <tr>
              <th colSpan="2">Gas</th>
            </tr>
            <tr>
              <td>Used</td>
              <td>{transaction.gasUsed > 0 ? transaction.gasUsed.toString() : "n/a"}</td>
            </tr>
            <tr>
              <td>Limit</td>
              <td>{transactionMoreInfo.gasLimit > 0 ? transactionMoreInfo.gasLimit.toString() : "n/a"}</td>
            </tr>
            <tr>
              <td>Price</td>
              <td>{transactionMoreInfo.gasPrice > 0 ? transactionMoreInfo.gasPrice.toString() : "n/a"}</td>
            </tr>
            <tr>
              <th colSpan="2">Technical Information</th>
            </tr>
            <tr>
              <td>AccessList</td>
              <td>{transaction.accessList ? transaction.accessList : "--"}</td>
            </tr>
            <tr>
              <td>ChainId</td>
              <td>{transaction.chainId ? transaction.chainId : "--"}</td>
            </tr>
            <tr>
              <td>Creates</td>
              <td>{transaction.creates ? transaction.creates : "--"}</td>
            </tr>
            <tr>
              <td>Data</td>
              <td>{transaction.data ? transaction.data : "--"}</td>
            </tr>
            <tr>
              <td>Nonce</td>
              <td>{transaction.nonce ? transaction.nonce : "--"}</td>
            </tr>
            <tr>
              <td>Type</td>
              <td>{transaction.type}</td>
            </tr>
            <tr>
              <td>R</td>
              <td>{transaction.r ? transaction.r : "--"}</td>
            </tr>
            <tr>
              <td>S</td>
              <td>{transaction.s ? transaction.s : "--"}</td>
            </tr>
            <tr>
              <td>V</td>
              <td>{transaction.v ? transaction.v : "--"}</td>
            </tr>
          </tbody>
        </table>
      </Col>
      <Col xs={3} id="rightColumn">
        <div class="wrapper">
          <p>Transaction #{transactionHash.slice(0,7)}...</p>
          <Identicon string={transaction.hash} size="200" bg="#ccccff" fg="#CF9C65" />
          <div>Identicon for transaction's hash</div>
        </div>
      </Col>
    </Row>
    <Row>
      <Col>
        <div class='title'>
          <h2>Logs generated by this transaction</h2>
        </div>
        <Table id="log">
          <thead>
            <tr>
              <th>#</th>
              <th>Address</th>
              <th>Topics</th>
              <th>Data</th>
            </tr>
          </thead>
          <tbody>
            {transaction.logs.length === 0 && <tr><td colSpan={4} class='noResults'>None</td></tr>}
            {transaction.logs.map(l => (
              <tr key={l.logIndex}>
                <td>{l.logIndex}</td>
                <td>{l.address}</td>
                <td>
                {l.topics.map(topic => (
                  <div key={topic}>{topic}</div>
                ))}
                </td>
                <td>{l.data}</td>
              </tr>
            ))}
          </tbody>
        </Table>
      </Col>
    </Row>
    </>
  );
}

export default Transaction;
